// Generated by CoffeeScript 1.6.3
(function() {
  var candidate, casper, dateRemains, idx, secret, url, _i, _len;

  casper = (require('casper')).create({
    'logLevel': 'info',
    'verbose': true
  });

  secret = require('./secret');

  url = 'https://club.nintendo.jp/member/exec/index';

  candidate = [];

  dateRemains = 7;

  casper.on('remote.message', function(message) {
    return this.echo('remote message: ' + message);
  }).start(url, function() {
    this.echo(this.getCurrentUrl());
    return this.fill('form[name="EntranceForm"]', {
      'memberid': secret.getMemberId(),
      'memberpass': secret.getMemberPassword()
    }, true);
  }).then(function() {
    return this.echo(this.getCurrentUrl());
  }).thenClick('a[href="./memberEnqueteInfo"]', function() {
    this.echo(this.getCurrentUrl());
    candidate = this.evaluate(function(rem) {
      var dates, end, i, list, nodes, now, _i, _ref;
      nodes = document.querySelectorAll('td:nth-child(2)');
      list = [];
      now = Date.now();
      console.log(now);
      for (i = _i = 0, _ref = nodes.length; 0 <= _ref ? _i < _ref : _i > _ref; i = 0 <= _ref ? ++_i : --_i) {
        dates = /^[^\uff5e]*\uff5e\D*(\d+)\D+(\d+)\D+(\d+)/.exec(nodes[i].textContent);
        if (dates !== null) {
          end = new Date(dates[1], dates[2] - 1, dates[3]);
          end.setDate(end.getDate() - rem);
          if (end.getTime() <= now) {
            list.push(i);
          }
        }
      }
      return list;
    }, dateRemains);
    console.log(JSON.stringify(list));
  });

  for (_i = 0, _len = candidate.length; _i < _len; _i++) {
    idx = candidate[_i];
    1;
  }

  casper.run();

}).call(this);
